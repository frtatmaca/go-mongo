version: '3.8'

services:
  mongo1:
    container_name: mongo1
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - ./scripts/rs-init.sh:/scripts/rs-init.sh
      - ./scripts/init.js:/scripts/init.js
    networks:
      - mongo-network
    ports:
      - 27017:27017
    depends_on:
      - mongo2
      - mongo3
    links:
      - mongo2
      - mongo3
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  mongo2:
    container_name: mongo2
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    image: mongo
    networks:
      - mongo-network
    ports:
      - 27018:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  mongo3:
      container_name: mongo3
      environment:
        MONGO_INITDB_ROOT_USERNAME: admin
        MONGO_INITDB_ROOT_PASSWORD: admin
      image: mongo
      networks:
        - mongo-network
      ports:
        - 27019:27017
      restart: always
      entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

#  mongo-express:
#    image: mongo-express
#    ports:
#      - 8081:8081
#    links:
#      - mongo1
#    environment:
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
#      - ME_CONFIG_MONGODB_SERVER=localhost
#      - ME_CONFIG_MONGODB_PORT=27017
#    restart: unless-stopped

networks:
  mongo-network:
    name: mongo-network
